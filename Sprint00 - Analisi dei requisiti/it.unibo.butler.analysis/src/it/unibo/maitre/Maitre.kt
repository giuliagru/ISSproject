/* Generated by AN DISI Unibo */ 
package it.unibo.maitre

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Maitre ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "s0"
	}
	@kotlinx.coroutines.ObsoleteCoroutinesApi
	@kotlinx.coroutines.ExperimentalCoroutinesApi			
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("Maitre | Ready")
					}
					 transition( edgeName="goto",targetState="waitCmdPrepare", cond=doswitch() )
				}	 
				state("waitCmdPrepare") { //this:State
					action { //it:State
					}
					 transition(edgeName="t014",targetState="prepare",cond=whenDispatch("prepare"))
				}	 
				state("waitCmd") { //this:State
					action { //it:State
					}
					 transition(edgeName="t115",targetState="add",cond=whenDispatch("add"))
					transition(edgeName="t116",targetState="clear",cond=whenDispatch("clear"))
					transition(edgeName="t117",targetState="stoprobot",cond=whenDispatch("stop"))
					transition(edgeName="t118",targetState="consultroom",cond=whenDispatch("roomstate"))
				}	 
				state("prepare") { //this:State
					action { //it:State
						println("Maitre | Requirement: PREPARE")
						updateResourceRep( "prepare"  
						)
						forward("prepare", "prepare(Cmd)" ,"robot" ) 
					}
					 transition( edgeName="goto",targetState="waitCmd", cond=doswitch() )
				}	 
				state("add") { //this:State
					action { //it:State
						println("Maitre | Requirement: ADD")
						updateResourceRep( "add"  
						)
						forward("add", "add(Food)" ,"robot" ) 
					}
					 transition( edgeName="goto",targetState="waitCmd", cond=doswitch() )
				}	 
				state("clear") { //this:State
					action { //it:State
						println("Maitre | Requirement: CLEAR")
						updateResourceRep( "clear"  
						)
						forward("clear", "clear(Cmd)" ,"robot" ) 
					}
					 transition( edgeName="goto",targetState="waitCmdPrepare", cond=doswitch() )
				}	 
				state("stoprobot") { //this:State
					action { //it:State
						println("Maitre | Requirement: STOP")
						updateResourceRep( "stoprobot"  
						)
						forward("stop", "stop(Action)" ,"robot" ) 
					}
					 transition(edgeName="t119",targetState="reactivaterobot",cond=whenDispatch("reactivate"))
				}	 
				state("reactivaterobot") { //this:State
					action { //it:State
						println("Maitre | Requirement: REACTIVATE")
						updateResourceRep( "reactivaterobot"  
						)
						forward("reactivate", "reactivate(Action)" ,"robot" ) 
					}
					 transition( edgeName="goto",targetState="waitCmd", cond=doswitch() )
				}	 
				state("consultroom") { //this:State
					action { //it:State
						println("Maitre | Requirement: CONSULT ROOM")
						updateResourceRep( "consultroom"  
						)
					}
					 transition( edgeName="goto",targetState="waitCmd", cond=doswitch() )
				}	 
			}
		}
}
